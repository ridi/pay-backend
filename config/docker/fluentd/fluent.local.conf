<source>
  @type forward
</source>

<match *.ridi-pay.backend.api>
  @type rewrite_tag_filter
  <rule>
    key log
    pattern /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>(?:[^\"]|\\.)*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>(?:[^\"]|\\.)*)" "(?<agent>(?:[^\"]|\\.)*)")?$/
    tag ${tag}.apache.access
  </rule>
  <rule>
    key log
    pattern /^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$/
    tag ${tag}.apache.error
  </rule>
  <rule>
    key log
    pattern /([0-9]+)-([0-9]+)\.([0-9]+)(\s+)-(\s+)([0-9]+)(\s+)-(\s+)(.+)(\s+)-(\s+)MSG(\s+):(\s+)(?<message>.*)/
    tag ${tag}.pg.kcp
  </rule>
</match>

<filter *.ridi-pay.backend.api.pg.kcp>
  @type record_transformer
  enable_ruby
  <record>
    log ${record["log"].gsub(/card_no=(\d{6})\d+\u001f/, "card_no=\\1**********\u001f").gsub(/batch_key=.+\u001f/, "batch_key=******\u001f")}
  </record>
</filter>

<match **>
  @type stdout
</match>
